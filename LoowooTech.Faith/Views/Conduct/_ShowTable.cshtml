@{ 
    if (Model == null)
    {
        return;
    }
    List<ConductStandard> list = Model as List<ConductStandard>;
    if (list == null)
    {
        return;
    }
    int serial = 1;
}

<table class="table table-hover table-striped">
    <thead>
        <tr>
            <th>序号</th>
            <th>录入时间</th>
            <th>企业/自然人</th>
            <th>名称</th>
            <th>项目名称</th>
            <th>环节</th>
            <th>行为</th>
            <th>诚信等级</th>
            <th>扣分</th>
            <th>备注</th>
            <th>状态</th>
            <th>操作</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in list)
        {
            <tr>
                <td>@(serial++)</td>
                <td>@(item.CreateTime.ToString("yyyy-MM-dd"))</td>
                <td>@(item.SystemData.GetDescription())</td>
                <td>
                    <a href="@(item.SystemData==SystemData.Enterprise?"/Enterprise/Detail?id="+item.ELID:"/Lawyer/Detail?id="+item.ELID)">
                        @if (!string.IsNullOrEmpty(item.ELName) && item.ELName.Length > 20)
                        {
                            <abbr title="@(item.ELName)">@(item.ELName.Substring(0, 20))</abbr>
                        }
                        else
                        {
                            @(item.ELName)
                        }
                    </a>
                </td>
                <td>
                    <a href="/Land/Detail?id=@(item.LandID)">
                        @if (!string.IsNullOrEmpty(item.LandName) && item.LandName.Length > 20)
                        {
                            <abbr title="@(item.LandName)">@(item.LandName.Substring(0,20))</abbr>
                        }
                        else
                        {
                            @(item.LandName)
                        }
                    </a>
                </td>
                <td>@(item.Credit.GetDescription())</td>
                <td>@(item.StandardName)</td>
                <td>@(item.Degree.GetDescription())</td>
                <td>@(item.Score)</td>
                <td>@(item.Remark)</td>
                <td>@(item.State.HasValue?item.State.Value.GetDescription():"未提交")</td>
                <td>
                    @if (!item.State.HasValue || item.State.Value == BaseState.DisAgree)
                    {

                        <a class="btn btn-success btn-xs" href="/FlowNode/Create?infoId=@(item.ID)" data-toggle="modal" data-target="#Modal"><i class="glyphicon glyphicon-upload"></i>提交审核</a>
                        <a class="btn btn-primary btn-xs" href="/Conduct/Create?id=@(item.ID)&&dataid=&&systemdata=@(item.SystemData)" data-toggle="modal" data-target="#Modal"><i class="glyphicon glyphicon-edit"></i>编辑</a>
                        <a class="btn btn-danger btn-xs" href="/Conduct/Delete?id=@(item.ID)" name="Delete"><i class="glyphicon glyphicon-remove-circle"></i>撤销</a>
                    }
                    @if (item.State.HasValue)
                    {
                        if (item.State.Value == BaseState.Argee)
                        {
                            <a class="btn btn-info btn-xs" href="/Conduct/Relieve?id=@(item.ID)" data-toggle="modal" data-target="#Modal"><i class="glyphicon glyphicon-flag"></i>解除</a>
                        }
                        if (item.State.Value == BaseState.Relieve)
                        {
                            <a class="btn btn-success btn-xs" href="/Conduct/CancelRelieve?id=@(item.ID)" name="Relieve"><i class="glyphicon glyphicon-flag"></i>撤销解除</a>
                        }
                    }
                    
                   
                </td>
            </tr>
        }
    </tbody>
</table>
